{
  "criteria": [
    {
      "target": "{{ .target_lowslo_userexperiencevitallcp }}",
      "timeframeFrom": "now-{{ .slo_period_day }}d",
      "timeframeTo": "now",
      "warning": "{{ .warning_lowslo_userexperiencevitallcp }}"
    }
  ],
  "customSli": {
    "filterSegments": [],
    "indicator": "fetch dt.entity.application\n| filter matchesPhrase(tags,\"slo\")\n| fieldsAdd dt.rum.application.entity=id\n| join [\n   timeseries lcp=percentile(dt.frontend.web.page.largest_contentful_paint,75,default:0)\n  , by: { dt.rum.application.entity }\n  , interval: 10m\n  //, filter: {matchesPhrase(entityAttr(ddt.rum.application.entity,\"tags\"),\"slo\")}\n  ], on:{dt.rum.application.entity}, kind:leftOuter\n| fields timeframe=right.timeframe, \n  interval=right.interval, \n  medium=iCollectArray(if(right.lcp[]\u003e (4000), right.lcp[])),\n  low=iCollectArray(if(right.lcp[]\u003c= (4000), right.lcp[])),\n  entityName(dt.rum.application.entity,type: \"dt.entity.application\")\n| fieldsAdd \n  mediumRespTimes=iCollectArray(if(isNull(low[]),0,else:1)),\n  lowRespTimes=iCollectArray(if(isNull(low[]),0,else:1))\n| fieldsAdd sli=100*(lowRespTimes[]/(lowRespTimes[]+lowRespTimes[]))\n| fieldsRemove low, low, lowRespTimes, lowRespTimes\n"
  },
  "description": "The proportion of interval with LCP (largest contentful paint) \u003c 4 secondes ",
  "name": "SLO low - user experience vital lcp",
  "tags": [
    "slo_level:low"
  ]
}